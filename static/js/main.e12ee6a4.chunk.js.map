{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","textColor","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","App","setMode","setTextColor","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e12ee6a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.textColor}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired};\r\n\r\nNavbar.defaultProps = {\r\n    title : \"Your title here\",\r\n    aboutText : \"Your aboutText here\"\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleClearClick = ()=>{\r\n        setText('');\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n    const handleCopy = ()=>{\r\n        let text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n      <>\r\n        <div\r\n          className=\"container\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n        >\r\n          <h1>{props.heading}</h1>\r\n          <div className=\"mb-3\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              value={text}\r\n              onChange={handleOnChange}\r\n              id=\"myBox\"\r\n              rows=\"8\"\r\n              style={{\r\n                backgroundColor: props.mode === \"dark\" ? \"#404040\" : \"white\",\r\n                color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n            Convert to Uppercase\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n            Convert to Lowercase\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>\r\n            Clear text\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n            Copy text\r\n          </button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>\r\n            Remove extra spaces\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"container my-3\"\r\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n        >\r\n          <h2>Your text summary</h2>\r\n          <p>\r\n            {text.split(\" \").length} words and {text.length} characters\r\n          </p>\r\n          <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n          <h2>Preview</h2>\r\n          <p>\r\n            {text.length > 0\r\n              ? text\r\n              : \"Enter something in the textbox above to preview it here\"}\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [textColor, setTextColor] = useState(\"dark\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setTextColor(\"light\");\n      document.body.style.backgroundColor = \"#042743\";\n    } else {\n      setMode(\"light\");\n      setTextColor(\"dark\");\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About Me\"\n          mode={mode}\n          toggleMode={toggleMode}\n          textColor={textColor}\n        />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/\">\n              \n            </Route>\n          </Switch> */}\n        <TextForm\n          heading=\"Enter the text to analyze below\"\n          textColor={textColor}\n          mode={mode}\n        />\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}